{"name":"Node-tail","tagline":"Nodejs module for tailing a file","body":"#tail\r\n\r\nTo install:\r\n\r\n```bash\r\nnpm install tail\r\n```\r\n\r\n#Use:\r\n```javascript\r\nTail = require('tail').Tail;\r\n\r\ntail = new Tail(\"fileToTail\");\r\n\r\ntail.on(\"line\", function(data) {\r\n  console.log(data);\r\n});\r\n\r\ntail.on(\"error\", function(error) {\r\n  console.log('ERROR: ', error);\r\n});\r\n````\r\n\r\nTail constructor accepts few parameters:\r\n\r\n```javascript\r\n\r\nvar fileToTail = \"/path/to/fileToTail.txt\";\r\nvar lineSeparator= /[\\r]{0,1}\\n/; // default is now a regex that handle linux/mac (9+)/windows\r\nvar fromBeginning = false;\r\nvar watchOptions = {}; // as per node fs.watch documentations\r\n\r\nnew Tail(fileToTail, lineSeparator, watchOptions,fromBeginning)\r\n```\r\n\r\n* `fileToTail` is the name (inclusive of the path) of the file to tail\r\n* `lineSeparator` is the line separator token (default \"\\n\")\r\n* `watchOptions` is the full set of options that can be passed to `fs.watch` as per node documentation (default: {})\r\n* `fromBeginning` force the tail of the file from the very beginning of it instead of from the first new line that will be appended(default: \"\\n\")\r\n\r\nThe only mandatory one is the first, i.e. the the file you want to tail.\r\n\r\nTail emits two type of events:\r\n\r\n* line\r\n```\r\nfunction(data){}\r\n```\r\n* error\r\n```\r\nfunction(exception){}\r\n```\r\n\r\nIf you simply want to stop the tail:\r\n\r\n```javascript\r\ntail.unwatch()\r\n```\r\n\r\nAnd to start watching again:\r\n```javascript\r\ntail.watch()\r\n```\r\n\r\n#Want to fork ?\r\n\r\nTail is written in [CoffeeScript](http://jashkenas.github.com/coffee-script/).\r\n\r\nThe Cakefile generates the javascript that is then published to npm.\r\n\r\n#License\r\nMIT. Please see License file for more details.\r\n","google":"UA-1839356-1","note":"Don't delete this file! It's used internally to help with page regeneration."}